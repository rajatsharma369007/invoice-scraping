<Activity mc:Ignorable="sap sap2010" x:Class="Read_Invoice" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="574,2438" sap2010:WorkflowViewState.IdRef="Read_Invoice_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>EpsilonAI.PDFReader</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>PDFReader</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This process helps in:&#xA;&#xA;1) Automate the reading of the pdf file.&#xA;2) Invoke Scrap_PDF_Data workflow&#xA;3) Automate the entering of the order information into an excel spreadsheet&#xA;4) Uploads the order information to orchestrator queue&#xA;5) Automate sending an email with an Excel workbook as an attachment&#xA;&#xA;Pre-condition:&#xA;- PDF invoices extracted from email and saved to &quot;Invoice&quot; folder&#xA;&#xA;Post-action:&#xA;- Invokes Scrap_PDF_Data&#xA;- Data from Data Table exports successfully to Excel file&#xA;- Invokes Send_Excel_Mail" DisplayName="Invoice Scraping, Orchestrator, Email Automation" sap:VirtualizedContainerService.HintSize="554,2378" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="C:\Users\rajat\Documents\rpa_exercise\Invoice Scrapping\Invoice" Name="invoicePath" />
      <Variable x:TypeArguments="s:String[]" Name="pdfFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch sap2010:Annotation.AnnotationText="Handles the exception of not having any files in the folder or provision of wrong path" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="512,371" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Assign sap2010:Annotation.AnnotationText="Fetches all the pdf files stored in the INVOICE folder" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[pdfFiles]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(invoicePath)]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="si:DirectoryNotFoundException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="si:DirectoryNotFoundException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="si:DirectoryNotFoundException" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Path is incorrect or Folder not present&quot;]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Interating through each pdf invoice" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="512,1638" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[pdfFiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Invokes Scrap_PDF_Data and Send_Excel_Mail workflow" sap:VirtualizedContainerService.HintSize="476,1473" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="invoiceNumber" />
              <Variable x:TypeArguments="x:String" Name="customerName" />
              <Variable x:TypeArguments="x:String" Name="fileName" />
              <Variable x:TypeArguments="x:String" Name="invoiceDate" />
              <Variable x:TypeArguments="sd:DataTable" Name="finalExcel" />
              <Variable x:TypeArguments="x:String" Name="excelFileName" />
              <Variable x:TypeArguments="x:String" Name="subTotal" />
              <Variable x:TypeArguments="x:String" Name="gst" />
              <Variable x:TypeArguments="x:String" Name="totalAmount" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap2010:Annotation.AnnotationText="Derive the filename from the pdf file path using regex" DisplayName="get filename from the absolute path" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[item.Split("\".ToCharArray).Last.ToString.split("."c)(0)]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Derive&#xA;* Customer Name&#xA;* Invoice Number&#xA;&#xA;from the filename" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,216" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[customerName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[fileName.split("_"c)(0)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[invoiceNumber]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[fileName.split("_"c)(2)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This workflow fetches the OrderInformation Data from the invoice:&#xA;&#xA;* ItemNo&#xA;* Description&#xA;* Quantity&#xA;* Price&#xA;* SubTotal&#xA;* GST&#xA;* Total&#xA;&#xA;and returns a Data Table" DisplayName="Invoke Scrap_PDF_Data Workflow File" sap:VirtualizedContainerService.HintSize="434,279" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Scrap_PDF_Data.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_pdfLocationPath">[item.ToString]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_pdfInfoTable">[finalExcel]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <Assign sap2010:Annotation.AnnotationText="Intializing excel filename" DisplayName="create variable for excel file name" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[excelFileName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("C:\Users\rajat\Documents\rpa_exercise\Invoice Scrapping\Generated Excel\" + customerName + "_" + invoiceNumber + ".xlsx")]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Creates the final excel of the invoice" DisplayName="Creates the Excel file and save it to Generated Excel folder" sap:VirtualizedContainerService.HintSize="434,319" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[excelFileName]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[finalExcel]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This workflow mails the generated excel file to my outlook account which subject line:&#xA;&#xA;&quot;CustomerName_InvoiceNumber details uploaded to queue&quot;" DisplayName="Invoke Send_Excel_Mail Workflow File" sap:VirtualizedContainerService.HintSize="434,174" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Send_Excel_Mail.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_subjectLine">[string.Format("Course 2 Automation: " + customerName + "_" + invoiceNumber + " details uploaded to queue")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_excelPath">[excelFileName]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>